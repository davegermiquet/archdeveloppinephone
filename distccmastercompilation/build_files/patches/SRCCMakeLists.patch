--- CMakeLists.txt	2020-12-12 10:56:01.221552989 -0500
+++ CMakeLists.test	2020-12-12 11:10:16.553098297 -0500
@@ -89,124 +89,6 @@
 	set( ZDOOM_LIBS "" )
 endif( NOT ZDOOM_LIBS )
 
-if( WIN32 )
-	if( X64 )
-		set( WIN_TYPE Win64 )
-		set( XBITS x64 )
-	else( X64 )
-		set( WIN_TYPE Win32 )
-		set( XBITS x86 )
-	endif( X64 )
-	
-	add_definitions( -D_WIN32 )
-	
-	set( FMOD_SEARCH_PATHS
-		"C:/Program Files/FMOD SoundSystem/FMOD Programmers API ${WIN_TYPE}/api"
-		"C:/Program Files (x86)/FMOD SoundSystem/FMOD Programmers API ${WIN_TYPE}/api"
-		# This next one is for Randy.
-		"E:/Software/Dev/FMOD/${WIN_TYPE}/api" 
-		# .. and this one for Graf Zahl
-		"D:/portable/FMOD SoundSystem 4.26/FMOD Programmers API WIN32/api"
-		)
-	set( FMOD_INC_PATH_SUFFIXES PATH_SUFFIXES inc )
-	set( FMOD_LIB_PATH_SUFFIXES PATH_SUFFIXES lib )
-	set( NASM_NAMES nasmw nasm )
-	
-	find_path( D3D_INCLUDE_DIR d3d9.h
-		PATHS ENV DXSDK_DIR
-		PATH_SUFFIXES Include )
-	if( NOT D3D_INCLUDE_DIR )
-		message( SEND_ERROR "Could not find DirectX 9 header files" )
-	else( NOT D3D_INCLUDE_DIR )
-		include_directories( ${D3D_INCLUDE_DIR} )
-	endif( NOT D3D_INCLUDE_DIR )
-	
-	find_path( XINPUT_INCLUDE_DIR xinput.h
-		PATHS ENV DXSDK_DIR
-		PATH_SUFFIXES Include )
-	if( NOT XINPUT_INCLUDE_DIR )
-		message( SEND_ERROR "Could not find xinput.h. XInput will be disabled." )
-		add_definitions( -DNO_XINPUT )
-	else( NOT XINPUT_INCLUDE_DIR )
-		include_directories( ${XINPUT_INCLUDE_DIR} )
-	endif( NOT XINPUT_INCLUDE_DIR )
-
-	find_library( DX_dxguid_LIBRARY dxguid
-		PATHS ENV DXSDK_DIR
-		PATH_SUFFIXES Lib Lib/${XBITS} )
-	find_library( DX_dinput8_LIBRARY dinput8
-		PATHS ENV DXSDK_DIR
-		PATH_SUFFIXES Lib Lib/${XBITS} )
-
-	set( DX_LIBS_FOUND YES )
-	if( NOT DX_dxguid_LIBRARY )
-		set( DX_LIBS_FOUND NO )
-	endif( NOT DX_dxguid_LIBRARY )
-	if( NOT DX_dinput8_LIBRARY )
-		set( DX_LIBS_FOUND NO )
-	endif( NOT DX_dinput8_LIBRARY )
-
-	if( NOT DX_LIBS_FOUND )
-		message( FATAL_ERROR "Could not find DirectX 9 libraries" )
-	endif( NOT DX_LIBS_FOUND )
- 	if( NOT NO_OPENAL )
- 
- 		message( STATUS "Looking for al.h" )
- 		set( OPENAL_SEARCH_PATHS
- 			ENV ALSDK_DIR
- 			ENV MINGDIR
- 			"C:/Program Files/OpenAL 1.1 SDK"
- 			"C:/Program Files (x86)/OpenAL 1.1 SDK"
- 			"E:/Programs/Dev/OpenAL"
- 			"E:/Program Files (x86)/OpenAL 1.1 SDK" )
- 
- 		find_path( OPENAL_INCLUDE_DIR al.h
- 		PATHS ${OPENAL_SEARCH_PATHS}
- 		PATH_SUFFIXES include include/AL )
- 		if( OPENAL_INCLUDE_DIR )
- 			message( STATUS "Looking for al.h - found: ${OPENAL_INCLUDE_DIR}" )
- 		else( OPENAL_INCLUDE_DIR )
- 			message( STATUS "Looking for al.h - not found" )
- 		endif( OPENAL_INCLUDE_DIR )
-  
- 		if( NOT OPENAL_INCLUDE_DIR )
- 			set( NO_OPENAL ON )
- 		else( NOT OPENAL_INCLUDE_DIR )
- 			include_directories( ${OPENAL_INCLUDE_DIR} )
- 		endif( NOT OPENAL_INCLUDE_DIR )
- 	endif( NOT NO_OPENAL )
-  
-
-	set( ZDOOM_LIBS
-		wsock32
-		winmm
-		"${DX_dxguid_LIBRARY}"
-		"${DX_dinput8_LIBRARY}"
-		ole32
-		user32
-		gdi32
-		comctl32
-		comdlg32
-		ws2_32
-		setupapi
-		oleaut32 
-		DelayImp )
-  	if( NOT NO_OPENAL )
-  		message( STATUS "Looking for OpenAL library" )
-  		find_library( OPENAL_LIBRARY NAMES OpenAL32
-  			PATHS ${OPENAL_SEARCH_PATHS}
-  			PATH_SUFFIXES lib )
-   
-  		if( NOT OPENAL_LIBRARY )
-  			set( NO_OPENAL ON )
-  			message( STATUS "Looking for OpenAL library - not found" )
-  		else( NOT OPENAL_LIBRARY )
-  			set( ZDOOM_LIBS ${ZDOOM_LIBS} "${OPENAL_LIBRARY}" )
-  			message( STATUS "Looking for OpenAL library - found" )
-  		endif( NOT OPENAL_LIBRARY )
-   
-  	endif( NOT NO_OPENAL )
-else( WIN32 )
 	if( APPLE )
 		set( FMOD_SEARCH_PATHS "/Developer/FMOD Programmers API Mac/api" )
 		set( FMOD_INC_PATH_SUFFIXES PATH_SUFFIXES inc )
@@ -313,7 +195,6 @@
 	if( NO_GL )
 		add_definitions( -DNO_GL=1 )
 	endif( NO_GL )
-endif( WIN32 )
 
 if( X64 )
 	set( NO_ASM ON )
@@ -643,20 +524,6 @@
 	add_definitions( -DHAVE_FILELENGTH=1 )
 endif( FILELENGTH_EXISTS )
 
-CHECK_FUNCTION_EXISTS( strupr STRUPR_EXISTS )
-if( NOT STRUPR_EXISTS )
-	add_definitions( -DNEED_STRUPR=1 )
-endif( NOT STRUPR_EXISTS )
-
-CHECK_FUNCTION_EXISTS( stricmp STRICMP_EXISTS )
-if( NOT STRICMP_EXISTS )
-	add_definitions( -Dstricmp=strcasecmp )
-endif( NOT STRICMP_EXISTS )
-
-CHECK_FUNCTION_EXISTS( strnicmp STRNICMP_EXISTS )
-if( NOT STRNICMP_EXISTS )
-	add_definitions( -Dstrnicmp=strncasecmp )
-endif( NOT STRNICMP_EXISTS )
 
 if( NOT MSVC )
 	add_definitions( -D__forceinline=inline )
